class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None
    def create(self, n):
        if n <= 0:
            return 
        self.head = Node(int(input("Enter value for node 1: "))) 
        temp = self.head
        for i in range(1, n):
            value = int(input(f"Enter value for node {i + 1}: "))
            new_node = Node(value)
            temp.next = new_node
            temp = new_node
    def inser(self):
         value1 = int(input("Enter value for node : "))
         new_node=Node(value1)
         new_node.next=self.head
         self.head=new_node
    def random(self,pos):
        temp=self.head
        value2 = int(input("Enter value for node : "))
        new_node=Node(value2)
        i=1
        while i<pos-1:
            temp=temp.next
            i+=1
        new_node.next=temp.next
        temp.next=new_node
    def insertionend(self):
        temp=self.head
        value3 = int(input("Enter value for node : "))
        new_node=Node(value3)
        while temp.next!=None :
            temp=temp.next
        temp.next=new_node
    def deletionbegin(self):
        temp=self.head
        self.head=self.head.next
    def deletionend(self):
        temp=self.head
        while temp.next!=None:
            prev=temp
            temp=temp.next
        prev.next=None
    def deletionrandom(self,pos):
        temp=self.head
        i=0
        while i<pos-1:
            prev=temp
            temp=temp.next
            i+=1
        prev.next=temp.next
    def display(self):
        temp = self.head
        while temp:
            print(temp.data)
            temp = temp.next
    
    
n = int(input("Enter the number of nodes: ")) 
ll = LinkedList()
ll.create(n)
m1=int(input("enter the pos u want to insert"))
ll.deletionrandom(m1)
ll.display()
ll.deletionend()
ll.display()
ll.inser()
ll.display()  
m1=int(input("enter the pos u want to insert"))
ll.random(m1)
ll.display() 
ll.insertionend()
ll.display()
ll.deletionbegin()
ll.display()
